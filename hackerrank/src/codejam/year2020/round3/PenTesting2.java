package codejam.year2020.round3;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.IntStream;

public class PenTesting2 {
    private static int testPen(List<Integer> pens, int indexToTry) {
        int penVal = pens.get(indexToTry);
        if (penVal == 0) {
            return 0;
        }
        pens.set(indexToTry, penVal - 1);
        return 1;
    }

    public static void main(String[] args) {
        int n = 15;

        int allTries = 100000;
        int successTries = 0;

        for (int i = 0; i < allTries; i++) {
            List<Integer> pens = new ArrayList<>();
            IntStream.range(0, n).forEach(pens::add);

            List<Integer> shuffledPens = new ArrayList<>();

            while (!pens.isEmpty()) {
                int index = (int)(Math.random() * pens.size());
                shuffledPens.add(pens.get(index));
                pens.remove(index);
            }

            /*int index = (int)(Math.random() * shuffledPens.size());
            for (int j = 0; j < 15; j++) {
                if (0 == testPen(shuffledPens, index)) {
                    shuffledPens.remove(index);
                    break;
                }
            }

            index = (int)(Math.random() * shuffledPens.size());
            for (int j = 0; j < 15; j++) {
                if (0 == testPen(shuffledPens, index)) {
                    shuffledPens.remove(index);
                    break;
                }
            }*/

            int index1 = 0;//(int)(Math.random() * shuffledPens.size());
            int pen1 = shuffledPens.get(index1);
            shuffledPens.remove(index1);

            int index2 = (int)(Math.random() * shuffledPens.size());
            int pen2 = shuffledPens.get(index2);

            if (pen1 + pen2 >= n) {
                successTries++;
            }
        }

        System.out.println(successTries);
    }
}
